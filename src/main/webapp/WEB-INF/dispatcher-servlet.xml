<?xml version="1.0" encoding="UTF-8"?>
<!-- 
# xml의 dtd 선언 부분
1. dtd : 상단에 어떤 태그를 사용할지를 선언하는 부분.
2. dtd에 맞는 태그를 활용 할 수 있다.
# 스프링은 이 dispacher-servlet.xml에서 선언한 클래스들을 
객체로 컨테이너에서 로딩 후, 해당 객체들을 url 패턴으로 호출하여 처리한다.
 -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:task="http://www.springframework.org/schema/task" 
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:context="http://www.springframework.org/schema/context"
		xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	 xmlns:util="http://www.springframework.org/schema/util"
	 xmlns:websocket="http://www.springframework.org/schema/websocket"
	 xmlns:sec="http://www.springframework.org/schema/security"
	 xmlns:tx="http://www.springframework.org/schema/tx" 
	 
	xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/task
       http://www.springframework.org/schema/task/spring-task.xsd       
        http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
  		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc.xsd     
        http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util.xsd
   		http://www.springframework.org/schema/websocket
		http://www.springframework.org/schema/websocket/spring-websocket.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security.xsd	
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd	
		" >
	<!-- springweb 하위에 있는 패키지는 자동 등록 처리.. Component controller, service, springweb 
		하위 패키지에 있는 @Controller, @Service, @Repository가 선언되어 있으면 객체를 선언하여 로딩이 된 상황과 
		동일하다.. 웹서버가 기동이 되면 모든 springweb에 있는 객체가 로딩이 된다. (A01_StartController) (A01_StartService) -->







	<context:component-scan base-package="project5">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Service" />
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Repository" />
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Component" />
	</context:component-scan>
	<!-- 컨테이너에 공통 DB 설정 정보 가져오기 -->
	<context:property-placeholder
		location="classpath:/resource/config" />
	<!-- 웹 소켓 통신을 위한 handelr 선언 component로 선언한 이름과 url패턴을 mapping server handler와 
		client에서 js로 호출할 url형식을 선언.. -->
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" />
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter" />
	<mvc:default-servlet-handler />
	<websocket:handlers>
		<websocket:mapping handler="chatHandler"
			path="/chat-ws.do" />
	</websocket:handlers>
	<!-- client단에서 /chat-ws.do로 웹 소켓 클라이언트로 호출하면 Component로 선언한 chatHandler 
		가 호출되어지게 설정.. Component("chatHandler") public class A02_ChattingHandler -->

	<!-- lib에 있는 만들어진 객체들을 생성하고 사용 1. DB 처리를 위한 연결객체 선언화 활용. config 안에 선언된 key를 
		아래 DB 연결 처리하는 정보에 설정. -->
	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"><!-- 
			자원의 해제하는 처리의 메서드를 지정. -->
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.user}" />
		<property name="password" value="${jdbc.pass}" />
	</bean>
	<!-- 2. mybatis 컨테이너에서 사용하기.. -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- dataSource에 의해 연결된 객체 호출하기. -->
		<property name="dataSource" ref="dataSource" />
		<!-- 설정 파일 지정하기 -->
		<property name="configLocation"
			value="classpath:resource/mybatis.Spring.xml" />
	</bean>
	<!-- 3. Dao 인터페이스 패키지 선언하기 mybatis 프레인웍에서 자동으로 만들어 주는 추상메서드({}-body가 없는 
		메서드)를 기준으로 상속받은 실제 객체를 만들어 준다. 이 때, 인터페이스가 있는 패키지를 지정하여야 한다. - 추가적으로 패키지가 
		더 필요할 때, value="패키지1, 패키지2, 패키지3..." 형식으로 지정하면 된다. -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="project5" />
	</bean>
	<!-- 파일 업로드를 위한 viewer 선언 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />
















	<!-- # jsp/html 뷰와 기본 bean view의 우선 순위 설정.. 1. jsp view 기본 설정. - 우선순위 property로 
		설정 1 2. bean으로 등록하는 view 설정. - 우선순위 property로 설정 0 컨테이너에서 viewer를 찾을 때, 등록된 
		것인 적은 것부터 찾고, 등록된 것이 많은 것을 찾는 것이 효율적이기 때문이다. -->
	<!-- jsp view는 기본적으로 설정이 되어 있지만, 우선순위 때문에 선언한다. -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 접두어/접미어 매핑 이 내용을 선언하면 controller의 view호출의 마지막 부분을 접두어와 접미어가 생략가능하다. 
			return "WEB-INF\\views\\a02_mvc\\a01_empList.jsp" ==> return "\\a02_mvc\\a01_empList" 
			<property name="prefix" value="WEB-INF\views"/> <property name="suffix" value=".jsp"/> -->
		<property name="order" value="1" />
	</bean>
	<!-- 정의한 bean viewer 선언 우선순위 첫번째로 지정. -->
	<bean id="btnViewResolver"
		class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<property name="order" value="0" />
	</bean>


	<!-- 다운로드 viewer 등록 컨트롤러에서 아래와 같이 viewer를 호출 처리.. return "download" -->
	<bean id="download" class="project5.z01_util.DownloadViewer" />



	<!-- json 뷰 선언return "pageJsonReport" -->
	<bean id="pageJsonReport"
		class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
		<property name="contentType" value="text/html; charset=utf-8"></property>
	</bean>






	<!-- 메일 발송 서버 설정(SMTP) -->
	<bean id="mailSender"
		class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com" />
		<property name="port" value="587" />
		<property name="username" value="ssangyoung7878@gmail.com" />
		<!-- 등록한 gamil 계정과 비밀번호 입력.. -->
		<property name="password" value="dkssudgktpdy" />
		<!--보안 관련 설정 -->
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
			</props>
		</property>

	</bean>




	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>message.msg</value>
				<value>message.error</value>
			</list>
		</property>	
		<property name="defaultEncoding" value="UTF-8" />
	</bean>
	
	
	<bean id="localeResolver" 
		class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
			<property name="defaultLocale" value="korean"></property>
		</bean>




	<mvc:view-controller path="/index" view-name="/view/index.jsp" />
	<mvc:view-controller path="/home/main" view-name="/view/homeMain.jsp" />
	<mvc:view-controller path="/manager/main" view-name="/view/managerMain.jsp" />
	<mvc:view-controller path="/admin/usermanager/main" view-name="/view/usermanagerMain.jsp" />	
	<mvc:view-controller path="/admin/main" view-name="/view/adminMain.jsp" />
	<mvc:view-controller path="/member/main" view-name="/view/memberMain.jsp" />
	<mvc:view-controller path="/user/loginform" view-name="/view/user/loginForm.jsp" />
	<mvc:view-controller path="/user/join" view-name="/view/user/joinForm.jsp" />
	<mvc:view-controller path="/security/accessDenied" view-name="/view/security/accessDenied.jsp" />


<bean
	class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
	<property name="messageConverters">
		<list>
			<ref bean="jsonMessageConverter" />
		</list>
	</property>
</bean>

	<bean id="jsonMessageConverter"
		class="org.springframework.http.converter.json.GsonHttpMessageConverter">
	</bean>








	<!-- 엑셀/pdf 다운로드 -->
	<bean id="pageRank" class="project5.z01_util.PageRankView">
	</bean>

	<bean id="pageReport" class="project5.z01_util.PageReportView">
	</bean>

</beans>