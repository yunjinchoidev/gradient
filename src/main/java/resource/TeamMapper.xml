<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
	
<mapper namespace="project5.team.TeamDao">




	<!-- 회원 목록 리스트 -->
	<select id="getTeamList" resultType="team"
		parameterType="TeamSch">
		SELECT *FROM (SELECT ROW_NUMBER() OVER (ORDER BY
		mp.MEMBER_PROJECT_KEY ASC)
		AS cnt,
		mp.MEMBER_PROJECT_KEY, 
		m.name AS name, m.auth AS auth,
		d.dname AS dname, m.email AS email,
		p.NAME AS
		projectname, mp.STATUS AS
		STATUS, mp.MEMBER_PROJECT_KEY AS
		memberprojectkey,
		mp.projectkey projectkey
		FROM MEMBER_PROJECT mp,
		MEMBER m, PROJECT p, DEPARTMENT d
		WHERE  m.name IS NOT null
		AND mp.memberkey = m.MEMBERKEY
		AND mp.PROJECTKEY = p.PROJECTKEY
		AND d.deptno = mp.deptno 
		and mp.projectkey=#{projectkey} 
		AND mp.STATUS='배정')
		WHERE cnt BETWEEN #{start}
		AND #{end} ORDER BY memberprojectkey
	</select>
	
	
	<select id="totCnt" resultType="int"
		parameterType="TeamSch">
		select count(*)
		from MEMBER_PROJECT
		where 1=1
		and projectkey=${projectkey}
		AND STATUS='배정'
	</select>
	
	
	
	<!-- 회원 배정 목록 리스트 
	<select id="getTeamDetail" resultType="team" parameterType="team">
		SELECT
		m.name AS name, m.auth AS auth,
		d.dname AS dname, m.email AS email,
		p.NAME AS projectname, mp.STATUS AS
		STATUS, mp.MEMBER_PROJECT_KEY AS
		memberprojectkey
		FROM MEMBER_PROJECT mp,
		MEMBER m, PROJECT p, DEPARTMENT
		d
		WHERE mp.STATUS = #{status}
		AND
		p.PROJECTKEY = #{projectkey}
		AND m.name
		IS
		NOT null
		AND mp.memberkey =
		m.MEMBERKEY
		AND mp.PROJECTKEY =
		p.PROJECTKEY
		AND mp.DEPTNO = d.DEPTNO
	</select>   -->
	<!-- 모달창 프로젝트 리스트 -->
	<select id="selectPrjList" 
		resultType="team">
		SELECT projectkey AS projectkey, name AS
		projectname
		FROM
		project
	</select>
	<!-- 부서 리스트 -->
	<select id="selectdptList" 
		resultType="team">
		SELECT deptno as deptno, dname
		FROM DEPARTMENT
	</select>
	<!-- 회원 리스트 -->
	<select id="selectMemList" 
		resultType="team">
		SELECT memberkey AS memberkey,name AS name
		FROM MEMBER
		WHERE
		id LIKE '%'||#{id,jdbcType=VARCHAR}||'%' AND pass LIKE
		'%'||#{pass,jdbcType=VARCHAR}||'%'
		AND name LIKE
		'%'||#{name,jdbcType=VARCHAR}||'%'
		ORDER BY memberkey asc
	</select>
	<!-- 프로젝트 배정 MEMBER_PROJECT VALUES (seq_team.nextval,#{projectkey},#{memberkey}, 
		#{deptno}, #{status}) -->
	<insert id="insTeam" parameterType="team">
		INSERT INTO MEMBER_PROJECT
		values
		(seq_team.nextval,#{memberkey},#{projectkey},#{deptno},#{status})
	</insert>
	
	
	
	
	
	<update id="uptTeam" parameterType="team">
		UPDATE MEMBER_PROJECT
		SET status =
		#{status}
		WHERE PROJECTKEY = #{projectkey}
	</update>
    <delete id="delTeam" parameterType="int">
    DELETE FROM MEMBER_PROJECT
	WHERE MEMBER_PROJECT_KEY = #{member_project_key}
    </delete>
    <!-- 회원 리스트 글 -->
    <select id="getTeam" parameterType="int" resultType="team">
    SELECT 
		m.name AS name, m.auth AS auth,
		d.dname AS dname, m.email AS email,
		p.NAME AS projectname, mp.STATUS AS
		STATUS, mp.MEMBER_PROJECT_KEY AS memberprojectkey
		FROM MEMBER_PROJECT mp,
		MEMBER m, PROJECT p, DEPARTMENT d
		WHERE MEMBER_PROJECT_KEY = #{member_project_key}
		AND mp.memberkey =
		m.MEMBERKEY
		AND mp.PROJECTKEY = p.PROJECTKEY
		AND mp.DEPTNO = d.DEPTNO
     </select>
       
</mapper>
